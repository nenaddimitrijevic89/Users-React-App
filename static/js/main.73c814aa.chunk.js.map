{"version":3,"sources":["components/InputEl/InputEl.jsx","shared/constants.js","shared/utilities.js","containers/LoginPage/LoginPage.js","components/Header/Header.jsx","components/Loader/Loader.jsx","components/User/User.jsx","hoc/withAuth.js","shared/baseUrl.js","entities/user.js","services/userService.js","containers/UsersPage/UsersPage.js","containers/UserPage/UserPage.js","components/Layout/Layout.jsx","containers/UserForm/UserForm.js","containers/EditUserPage/EditUserPage.js","containers/CreateUserPage/CreateUserPage.js","App.js","index.js"],"names":["InputEl","type","name","value","onChange","children","placeholder","id","marginTop","e","target","required","SUCCESS","title","description","status","duration","isClosable","SUCCESS_LOGIN","SUCCESS_DELETE","SUCCESS_EDIT","ERROR_LOGIN","ERROR","ERROR_CREATE","ERROR_EMAIL","ERROR_UPDATE_EMAIL","ERROR_UPDATE_EMPTY","ERROR_UPDATE","validateEmail","email","test","toLowerCase","LoginPage","useState","setEmail","toast","useToast","history","useHistory","p","borderColor","borderWidth","borderRadius","data","bg","color","onClick","toaster","valid","storageEmail","localStorage","getItem","setItem","validationLogin","push","Header","useColorMode","colorMode","toggleColorMode","Loader","size","User","user","detailed","cursor","_hover","background","city","street","username","phone","website","withAuth","Component","props","auth","setAuth","useEffect","baseUrl","this","address","companyName","company","userService","fetch","then","response","json","map","method","body","JSON","stringify","users","setUsers","loader","setLoader","getInitUsers","a","fetchedUsers","maxW","variant","setUser","useParams","getSingleUser","fetchedUser","deleteUser","margin","Layout","isEdit","loadService","setValues","edit","submit","EditUserPage","CreateUserPage","App","exact","path","to","component","UsersPage","UserPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73c814aa.chunk.js","sourcesContent":["import { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport React from \"react\";\r\n\r\nconst InputEl = ({ type, name, value, onChange, children, placeholder }) => {\r\n  return (\r\n    <FormControl id={name} marginTop=\"15px\">\r\n      <FormLabel>{children}</FormLabel>\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value, name)}\r\n        placeholder={placeholder}\r\n        required\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default InputEl;","export const SUCCESS = {\r\n  title: \"Account created!\",\r\n  description: \"Congratulations!\",\r\n  status: \"success\",\r\n  duration: 4000,\r\n  isClosable: true,\r\n};\r\n\r\nexport const SUCCESS_LOGIN = {\r\n  title: \"Email is correct!\",\r\n  description: \"Welcome!\",\r\n  status: \"success\",\r\n  duration: 4000,\r\n  isClosable: true,\r\n};\r\n\r\nexport const SUCCESS_DELETE = {\r\n  title: \"Account deleted!\",\r\n  description: \"Goodbye!\",\r\n  status: \"success\",\r\n  duration: 4000,\r\n  isClosable: true,\r\n};\r\n\r\nexport const SUCCESS_EDIT = {\r\n  title: \"Account updated!\",\r\n  description: \"See you!\",\r\n  status: \"success\",\r\n  duration: 4000,\r\n  isClosable: true,\r\n};\r\n\r\nexport const ERROR_LOGIN = {\r\n  title: \"Email is not correct!\",\r\n  description: \"Try different email address!\",\r\n  status: \"error\",\r\n  duration: 4000,\r\n  isClosable: true,\r\n};\r\n\r\nexport const ERROR = {\r\n  title: \"Account not created!\",\r\n  description: \"Both fields must be filled!\",\r\n  status: \"error\",\r\n  duration: 4000,\r\n  isClosable: true,\r\n};\r\n\r\nexport const ERROR_CREATE = {\r\n  title: \"Account not created!\",\r\n  description: \"Something went wrong!\",\r\n  status: \"error\",\r\n  duration: 4000,\r\n  isClosable: true,\r\n};\r\n\r\nexport const ERROR_EMAIL = {\r\n  title: \"Account not created!\",\r\n  description: \"Email is not valid!\",\r\n  status: \"error\",\r\n  duration: 4000,\r\n  isClosable: true,\r\n};\r\n\r\nexport const ERROR_UPDATE_EMAIL = {\r\n  title: \"Account not updated!\",\r\n  description: \"Email is not valid!\",\r\n  status: \"error\",\r\n  duration: 4000,\r\n  isClosable: true,\r\n};\r\n\r\nexport const ERROR_UPDATE_EMPTY = {\r\n  title: \"Account not updated!\",\r\n  description: \"Both fields must be filled!\",\r\n  status: \"error\",\r\n  duration: 4000,\r\n  isClosable: true,\r\n};\r\n\r\nexport const ERROR_UPDATE = {\r\n  title: \"Account not updated!\",\r\n  description: \"Something went wrong!\",\r\n  status: \"error\",\r\n  duration: 4000,\r\n  isClosable: true,\r\n};\r\n","import { ERROR_EMAIL, ERROR_LOGIN, SUCCESS, SUCCESS_LOGIN } from \"./constants\";\r\n\r\nexport const validateEmail = (email) => {\r\n    if (!email) return;\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email.toLowerCase());\r\n  };\r\n\r\nexport const validationLogin = (email) => {\r\n    const valid = validateEmail(email);\r\n    if(!email || !valid){\r\n      return ERROR_EMAIL;\r\n    }\r\n    const storageEmail = localStorage.getItem(\"email\");\r\n    if (storageEmail === email) {\r\n      return SUCCESS_LOGIN;\r\n    } else if (storageEmail && storageEmail !== email) {\r\n      return ERROR_LOGIN;\r\n    } else {\r\n      localStorage.setItem(\"email\", email);\r\n      return SUCCESS;\r\n    }\r\n  };","import React, { useState } from \"react\";\r\nimport { Button, Container } from \"@chakra-ui/react\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport InputEl from \"../../components/InputEl/InputEl\";\r\nimport { validationLogin } from \"../../shared/utilities\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const set = (data) => {\r\n    setEmail(data);\r\n  };\r\n\r\n  const login = () => {\r\n    const toaster = validationLogin(email);\r\n    toast(toaster);\r\n    if (toaster.status === \"success\") {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      p=\"25px\"\r\n      borderColor=\"#50e3c2\"\r\n      borderWidth=\"3px\"\r\n      marginTop=\"30px\"\r\n      borderRadius=\"10px\"\r\n    >\r\n      <InputEl\r\n        type=\"email\"\r\n        name=\"email\"\r\n        onChange={set}\r\n        children=\"Email\"\r\n        placeholder=\"Enter email\"\r\n      />\r\n      <Button bg=\"lightGrey\" color=\"black\" onClick={login} marginTop=\"15px\">\r\n        Login\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { Center } from \"@chakra-ui/layout\";\r\nimport { Menu } from \"@chakra-ui/menu\";\r\nimport { useColorMode } from \"@chakra-ui/color-mode\";\r\nimport React from \"react\";\r\n\r\nconst Header = () => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <Menu>\r\n      <Center bg=\"#50e3c2\" p=\"15px\">\r\n        <Button onClick={toggleColorMode} bg=\"lightGrey\" color=\"black\">\r\n          Toggle {colorMode === \"light\" ? \"Dark\" : \"Light\"}\r\n        </Button>\r\n      </Center>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Center } from \"@chakra-ui/layout\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Center>\r\n      <Spinner size=\"xl\" marginTop=\"50px\" />\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { Td, Tr } from \"@chakra-ui/table\";\r\nimport React from \"react\";\r\n\r\nconst User = ({ user, detailed, onClick }) => {\r\n  return (\r\n    <Tr\r\n      cursor=\"pointer\"\r\n      _hover={{ background: \"#50e3c2\", color: \"black\" }}\r\n      onClick={onClick}\r\n    >\r\n      <Td>{user.id}</Td>\r\n      <Td>{user.name}</Td>\r\n      <Td>{user.email}</Td>\r\n      <Td>{user.city}</Td>\r\n      {detailed && <Td>{user.street}</Td>}\r\n      {detailed && <Td>{user.username}</Td>}\r\n      {detailed && <Td>{user.phone}</Td>}\r\n      {detailed && <Td>{user.website}</Td>}\r\n    </Tr>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Loader from \"../components/Loader/Loader\";\r\n\r\nconst withAuth = (Component) => {\r\n  return (props) => {\r\n    const [auth, setAuth] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n      const email = localStorage.getItem(\"email\");\r\n      if (!email) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        setAuth(true);\r\n      }\r\n    }, [history]);\r\n    return <>{auth ? <Component {...props}/> : <Loader />}</>;\r\n  };\r\n};\r\n\r\nexport default withAuth;\r\n","export const baseUrl = \"https://jsonplaceholder.typicode.com/users\";","class User{\r\n    constructor(user){\r\n        this.id = user.id;\r\n        this.name = user.name;\r\n        this.username = user.username;\r\n        this.email = user.email;\r\n        this.city = user.address.city;\r\n        this.street = user.address.street;\r\n        this.companyName = user.company.name;\r\n        this.website = user.website;\r\n        this.phone = user.phone;\r\n    }\r\n}\r\n\r\nexport { User };","import { baseUrl } from \"../shared/baseUrl\";\r\nimport { User } from \"../entities/user\";\r\nimport {\r\n  ERROR_CREATE,\r\n  ERROR_UPDATE,\r\n  SUCCESS,\r\n  SUCCESS_DELETE,\r\n  SUCCESS_EDIT,\r\n} from \"../shared/constants\";\r\n\r\nexport const userService = {\r\n  getUsers: () =>\r\n    fetch(baseUrl)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        const users = response.map((user) => new User(user));\r\n        return users;\r\n      }),\r\n\r\n  getUser: (id) =>\r\n    fetch(`${baseUrl}/${id}`)\r\n      .then((response) => response.json())\r\n      .then((user) => new User(user)),\r\n\r\n  deleteUser: (id) =>\r\n    fetch(`${baseUrl}/${id}`, {\r\n      method: \"DELETE\",\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        return SUCCESS_DELETE;\r\n      }\r\n    }),\r\n\r\n  createUser: (data) =>\r\n    fetch(baseUrl, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n    }).then((response) => {\r\n      if (response.status === 201) {\r\n        return SUCCESS;\r\n      } else {\r\n        return ERROR_CREATE;\r\n      }\r\n    }),\r\n\r\n  editUser: (data, id) =>\r\n    fetch(`${baseUrl}/${id}`, {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify(data),\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        return SUCCESS_EDIT;\r\n      } else {\r\n        return ERROR_UPDATE;\r\n      }\r\n    }),\r\n};\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { Container } from \"@chakra-ui/layout\";\r\nimport { Table, Tbody, Th, Thead, Tr } from \"@chakra-ui/table\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport User from \"../../components/User/User\";\r\nimport withAuth from \"../../hoc/withAuth\";\r\nimport { userService } from \"../../services/userService\";\r\n\r\nconst UsersPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const history = useHistory();\r\n\r\n  const getInitUsers = async () => {\r\n    const fetchedUsers = await userService.getUsers();\r\n    setUsers(fetchedUsers);\r\n    setLoader(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInitUsers();\r\n  }, []);\r\n\r\n  return loader ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container maxW=\"container.lg\">\r\n      <Table variant=\"simple\" marginTop=\"15px\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th>ID</Th>\r\n            <Th>Name</Th>\r\n            <Th>Email</Th>\r\n            <Th>City</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {users.map((user) => (\r\n            <User user={user} key={user.id} onClick={() => history.push(`users/${user.id}`)}/>\r\n          ))}\r\n        </Tbody>\r\n      </Table>\r\n      <Button marginTop=\"15px\" onClick={() => history.push(\"/createuser\")}>Create new user</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withAuth(UsersPage);\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { Container } from \"@chakra-ui/layout\";\r\nimport { Table, Tbody, Th, Thead, Tr } from \"@chakra-ui/table\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport User from \"../../components/User/User\";\r\nimport withAuth from \"../../hoc/withAuth\";\r\nimport { userService } from \"../../services/userService\";\r\n\r\nconst UserPage = () => {\r\n  const [user, setUser] = useState();\r\n  const [loader, setLoader] = useState(true);\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  const toast = useToast();\r\n\r\n  const getSingleUser = async (id) => {\r\n    const fetchedUser = await userService.getUser(id);\r\n    setUser(fetchedUser);\r\n    setLoader(false);\r\n  };\r\n\r\n  const deleteUser = async (id) => {\r\n    const toaster = await userService.deleteUser(id);\r\n    toast(toaster);\r\n    if (toaster.status === \"success\") {\r\n      history.push(\"/users\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSingleUser(id);\r\n  }, [id]);\r\n\r\n  return loader ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container maxW=\"container.xl\">\r\n      <Table variant=\"simple\" marginTop=\"15px\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th>ID</Th>\r\n            <Th>Name</Th>\r\n            <Th>Email</Th>\r\n            <Th>City</Th>\r\n            <Th>Street</Th>\r\n            <Th>Username</Th>\r\n            <Th>Phone</Th>\r\n            <Th>Website</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          <User user={user} detailed />\r\n        </Tbody>\r\n      </Table>\r\n      <Button margin=\"15px\" onClick={() => history.push(`/users/${id}/edit`)}>\r\n        Edit\r\n      </Button>\r\n      <Button margin=\"15px\" onClick={() => deleteUser(id)}>\r\n        Delete\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withAuth(UserPage);\r\n","import { Container } from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\n\r\nconst Layout = ({children}) => {\r\n  return (\r\n    <Container\r\n      p=\"25px\"\r\n      borderColor=\"#50e3c2\"\r\n      borderWidth=\"3px\"\r\n      marginTop=\"30px\"\r\n      borderRadius=\"10px\"\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport InputEl from \"../../components/InputEl/InputEl\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport withAuth from \"../../hoc/withAuth\";\r\nimport { userService } from \"../../services/userService\";\r\nimport {\r\n  ERROR,\r\n  ERROR_EMAIL,\r\n  ERROR_UPDATE_EMAIL,\r\n  ERROR_UPDATE_EMPTY,\r\n} from \"../../shared/constants\";\r\nimport { validateEmail } from \"../../shared/utilities\";\r\n\r\nconst UserForm = ({ isEdit }) => {\r\n  const [user, setUser] = useState({});\r\n  const toast = useToast();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const getSingleUser = async () => {\r\n    const fetchedUser = await userService.getUser(id);\r\n    setUser(fetchedUser);\r\n  };\r\n\r\n  const loadService = async () => {\r\n    let toaster = null;\r\n    if (isEdit) {\r\n      toaster = await userService.editUser(user, id);\r\n    } else {\r\n      toaster = await userService.createUser(user);\r\n    }\r\n    toast(toaster);\r\n    if (toaster.status === \"success\") {\r\n      history.push(\"/users\");\r\n    }\r\n  };\r\n\r\n  const setValues = (data, name) => {\r\n    setUser({ ...user, [name]: data });\r\n  };\r\n\r\n  const submit = (data, edit) => {\r\n    const valid = validateEmail(data.email);\r\n\r\n    if (!data.name) {\r\n      toast(edit ? ERROR_UPDATE_EMPTY : ERROR);\r\n      return;\r\n    }\r\n    if (!valid) {\r\n      toast(edit ? ERROR_UPDATE_EMAIL : ERROR_EMAIL);\r\n      return;\r\n    } else {\r\n      loadService();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!id) return;\r\n    getSingleUser();\r\n  }, [id]);\r\n\r\n  return (\r\n    <Layout>\r\n      <InputEl\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={user?.name || \"\"}\r\n        onChange={setValues}\r\n        children=\"Name\"\r\n        placeholder=\"Enter name\"\r\n      />\r\n      <InputEl\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={user?.email || \"\"}\r\n        onChange={setValues}\r\n        children=\"Email\"\r\n        placeholder=\"Enter email\"\r\n      />\r\n      <Button\r\n        bg=\"lightGrey\"\r\n        color=\"black\"\r\n        marginTop=\"15px\"\r\n        onClick={() => submit(user, isEdit)}\r\n      >\r\n        {isEdit ? \"Save\" : \"Create\"}\r\n      </Button>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withAuth(UserForm);\r\n","import React from \"react\";\r\nimport UserForm from \"../UserForm/UserForm\";\r\n\r\nconst EditUserPage = () => {\r\n  return <UserForm isEdit />;\r\n};\r\n\r\nexport default EditUserPage;\r\n","import React from \"react\";\r\nimport UserForm from \"../UserForm/UserForm\";\r\n\r\nconst CreateUserPage = () => {\r\n  return <UserForm />;\r\n};\r\n\r\nexport default CreateUserPage;\r\n","import LoginPage from \"./containers/LoginPage/LoginPage\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport UsersPage from \"./containers/UsersPage/UsersPage\";\r\nimport UserPage from \"./containers/UserPage/UserPage\";\r\nimport EditUserPage from \"./containers/EditUserPage/EditUserPage\";\r\nimport CreateUserPage from \"./containers/CreateUserPage/CreateUserPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ChakraProvider>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/users\" />\r\n        </Route>\r\n        <Route exact path=\"/login\" component={LoginPage} />\r\n        <Route exact path=\"/users\" component={UsersPage} />\r\n        <Route exact path=\"/createuser\" component={CreateUserPage} />\r\n        <Route exact path=\"/users/:id\" component={UserPage} />\r\n        <Route exact path=\"/users/:id/edit\" component={EditUserPage} />\r\n      </Switch>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}